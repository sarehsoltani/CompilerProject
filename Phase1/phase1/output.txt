Lexeme Token simbol_table
program PROGRAM_KW -
compilerPhaseOne IDENTIFIER -
var VAR_KW -
sare IDENTIFIER -
, COMMA_KW -
negar IDENTIFIER -
: COLON_KW -
real REAL_KW -
; SEMICOLON_KW -
num IDENTIFIER -
: COLON_KW -
integer INTEGER_KW -
; SEMICOLON_KW -
procedure PROCEDURE_KW -
calc IDENTIFIER -
( LP_KW -
x IDENTIFIER -
, COMMA_KW -
y IDENTIFIER -
, COMMA_KW -
z IDENTIFIER -
, COMMA_KW -
a IDENTIFIER -
10
, COMMA_KW -
b IDENTIFIER -
, COMMA_KW -
c IDENTIFIER -
: COLON_KW -
integer INTEGER_KW -
; SEMICOLON_KW -
k IDENTIFIER -
: COLON_KW -
real REAL_KW -
) RP_KW -
; SEMICOLON_KW -
var VAR_KW -
m IDENTIFIER -
: COLON_KW -
integer INTEGER_KW -
; SEMICOLON_KW -
begin BEGIN_KW -
x IDENTIFIER -
:= ASS_KW -
#0.1 REAL_CONSTANT -
+ ADD_KW -
#12.000 ERROR_ZERO -
; SEMICOLON_KW -
y IDENTIFIER -
:= ASS_KW -
11
#0012 ERROR_ZERO -
* MUL_KW -
#2 INTEGER_CONSTANT -
; SEMICOLON_KW -
z IDENTIFIER -
:= ASS_KW -
#51.0 REAL_CONSTANT -
% MOD_KW -
#39 INTEGER_CONSTANT -
; SEMICOLON_KW -
a IDENTIFIER -
:= ASS_KW -
#1 INTEGER_CONSTANT -
; SEMICOLON_KW -
b IDENTIFIER -
:= ASS_KW -
#1 INTEGER_CONSTANT -
; SEMICOLON_KW -
if IF_KW -
( LP_KW -
x IDENTIFIER -
.lt LT_KW -
y IDENTIFIER -
) RP_KW -
then THEN_KW -
m IDENTIFIER -
12
:= ASS_KW -
x IDENTIFIER -
; SEMICOLON_KW -
else ELSE_kw -
m IDENTIFIER -
:= ASS_KW -
y IDENTIFIER -
/ DIV_KW -
2 ERROR_NO_SHARP -
; SEMICOLON_KW -
if IF_KW -
( LP_KW -
z IDENTIFIER -
.gt GT_KW -
m IDENTIFIER -
) RP_KW -
then THEN_KW -
m IDENTIFIER -
:= ASS_KW -
z IDENTIFIER -
; SEMICOLON_KW -
repeat REPEAT_KW -
m IDENTIFIER -
:= ASS_KW -
m IDENTIFIER -
- SUB_KW -
13
#1 INTEGER_CONSTANT -
; SEMICOLON_KW -
exit EXIT_KW -
if IF_KW -
( LP_KW -
m IDENTIFIER -
.le LE_KW -
#1 INTEGER_CONSTANT -
) RP_KW -
m IDENTIFIER -
:= ASS_KW -
m IDENTIFIER -
+ ADD_KW -
#1 INTEGER_CONSTANT -
; SEMICOLON_KW -
end END_KW -
c IDENTIFIER -
:= ASS_KW -
a IDENTIFIER -
and AND_KW -
b IDENTIFIER -
; SEMICOLON_KW -
if IF_KW -
( LP_KW -
c IDENTIFIER -
.eq EQ_KW -
14
#0 INTEGER_CONSTANT -
) RP_KW -
then THEN_KW -
c IDENTIFIER -
:= ASS_KW -
a IDENTIFIER -
or OR_KW} -
b IDENTIFIER -
; SEMICOLON_KW -
end END_KW -
BUILD SUCCESSFUL (total time: 0 seconds)